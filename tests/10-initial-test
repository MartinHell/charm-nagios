#!/usr/bin/python3

import amulet
import requests

seconds = 200

d = amulet.Deployment(series='trusty')

d.add('nagios')
d.add('mysql')
d.add('mediawiki')

d.relate('mysql:db', 'mediawiki:db')
d.relate('nagios:monitors', 'mysql:monitors')
d.relate('nagios:monitors', 'mediawiki:monitors')

d.expose('nagios')

try:
    d.setup(timeout=seconds)
except amulet.helpers.TimeoutError:
    amulet.raise_status(amulet.SKIP, msg="Environment wasn't stood up in time")
except:
    raise


##
# Set relationship aliases
##
mysql_unit = d.sentry.unit['mysql/0']
mediawiki_unit = d.sentry.unit['mediawiki/0']
nagios_unit = d.sentry.unit['nagios/0']


# Validate that the web interface has htpasswd authentication
def test_web_interface_is_protected():
    r = requests.get("http://%s/nagios3/" % nagios_unit.info['public-address'])
    if r.status_code != 401:
        amulet.raise_status(amulet.FAIL, msg="Web Interface open to the world")
    # validate that our configured admin is valid
    nagpwd = nagios_unit.file_contents('/var/lib/juju/nagios.passwd').strip()
    r = requests.get("http://%s/nagios3/" % nagios_unit.info['public-address'],
                     auth=('nagiosadmin', nagpwd))
    if r.status_code != 200:
        amulet.raise_status(amulet.FAIL, msg="Web Admin login failed")

test_web_interface_is_protected()
